// Inputs
type symbol(usize, String)
type length(usize)

// Facts for lexing
rel digit = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}
rel mult_div = {"*", "/"}
rel plus_minus = {"+", "-"}

// Parsing
type value_node(id: u64, string: String, begin: usize, end: usize)
rel value_node($hash(x, d), d, x, x + 1) = symbol(x, d), digit(d)
rel value_node($hash(joint, b - 1, e), joint, b - 1, e) =
  symbol(b - 1, dh), digit(dh), value_node(x, dr, b, e), joint == $string_concat(dh, dr)

type mult_div_node(id: u64, string: String, left_node: u64, right_node: u64, begin: usize, end: usize)
rel mult_div_node(id, string, 0, 0, b, e) = value_node(id, string, b, e)
rel mult_div_node($hash(id, s, l, r), s, l, r, b, e) =
  symbol(id, s), mult_div(s), mult_div_node(l, _, _, _, b, id), value_node(r, _, id + 1, e)

type plus_minus_node(id: u64, string: String, left_node: u64, right_node: u64, begin: usize, end: usize)
rel plus_minus_node(id, string, l, r, b, e) = mult_div_node(id, string, l, r, b, e)
rel plus_minus_node($hash(id, s, l, r), s, l, r, b, e) =
  symbol(id, s), plus_minus(s), plus_minus_node(l, _, _, _, b, id), mult_div_node(r, _, _, _, id + 1, e)

type root_node(id: u64)
rel root_node(id) = plus_minus_node(id, _, _, _, 0, l), length(l)

// Evaluate AST
@demand("bf")
rel eval(x, s as f64) = value_node(x, s, _, _)
rel eval(x, y1 + y2) = plus_minus_node(x, "+", l, r, _, _), eval(l, y1), eval(r, y2)
rel eval(x, y1 - y2) = plus_minus_node(x, "-", l, r, _, _), eval(l, y1), eval(r, y2)
rel eval(x, y1 * y2) = mult_div_node(x, "*", l, r, _, _), eval(l, y1), eval(r, y2)
rel eval(x, y1 / y2) = mult_div_node(x, "/", l, r, _, _), eval(l, y1), eval(r, y2), y2 != 0.0

// Compute result
rel result(y) = eval(e, y), root_node(e)

// =============================================== //

// Testing related
type test_string(String)
rel length($string_length(s)) = test_string(s)
rel symbol(0, $string_char_at(s, 0) as String) = test_string(s), $string_length(s) > 0
rel symbol(i, $string_char_at(s, i) as String) = symbol(i - 1, _), test_string(s), $string_length(s) > i

rel test_string("123/24+1")
query result
