///////////// BASIC DEFINITIONS /////////////

// Storing all the nodes
type node(usize)

// Storing all the edges (undirected)
type edge(usize, usize)
rel edge(b, a) = edge(a, b)

// Reachability
@demand("bf")
rel reach(x, y) = edge(x, y), not enemy(y)
rel reach(x, z) = reach(x, y), edge(y, z), not enemy(z)

// Current state and next state
type curr_state(usize)
rel next_state(b) = curr_state(a), edge(a, b)

// The goal
type goal(usize)

// Whether we can reach the goal from next_state
rel can_reach_goal() = curr_state(x), goal(y), reach(x, y), not enemy(x)

///////////// Example 1 /////////////

// 1 -- 2 --<3>
// |    |    |
// 4 --^5^--^6^
// |    |    |
// 7 --[8]-- 9

rel node = {1, 2, 3, 4, 5, 6, 7, 8, 9}

rel edge = {
  (1, 2), (2, 3),
  (1, 4), (2, 5), (3, 6),
  (4, 5), (5, 6),
  (4, 7), (5, 8), (6, 9),
  (7, 8), (8, 9),
}

// There are enemies in 4, 5, 6
rel enemy = {
  0.1::1, 0.1::2, 0.1::3,
  0.1::4, 0.9::5, 0.9::6,
  0.1::7, 0.1::8, 0.1::9,
}

// Goal is node #3
rel goal(3)

// We want to start from node 5, 7, or 9
rel curr_state(9)

query can_reach_goal
